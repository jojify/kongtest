env:
  database: "postgres"
  log_level: debug
  admin_gui_host: kongmanager.dev2.pickles.com.au
  admin_gui_protocol: https
  admin_gui_url: https://kongmanager.dev2.pickles.com.au
  admin_gui_api_url: https://kongadmin.dev2.pickles.com.au 
  portal_gui_host: kongportal.dev2.pickles.com.au
  portal_gui_url: https://kongportal.dev2.pickles.com.au
  portal_api_url: https://kongportal.dev2.pickles.com.au/api      
  portal_gui_protocol: https
  nginx_worker_processes: 2
  proxy_access_log: /dev/stdout
  admin_access_log: /dev/stdout
  admin_gui_access_log: /dev/stdout
  portal_api_access_log: /dev/stdout
  proxy_error_log: /dev/stderr
  admin_error_log: /dev/stderr
  admin_gui_error_log: /dev/stderr
  portal_api_error_log: /dev/stderr
  prefix: /kong_prefix/
  d365fostorage1:
    valueFrom:
      secretKeyRef:
        name: pickles-picklesauctions-kong-sas-token
        key: d365fostorage1 

postgresql:
  enabled: true
  auth:
    username: "kong"  
    database: kong
    existingSecret: kong-datamigration-postgresql
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password    
  image:
    tag: 13.11.0-debian-11-r20      
  service:
    ports:
      postgresql: "5432"

extraLabels: {}

image:
  repository: dtapickles.azurecr.io/devops/kong/kong-proxy-go-plugins
  tag: "3.4.1.1.279639"
  pullPolicy: IfNotPresent
  pullSecrets:
    - dtapickles

status:
  enabled: true
  http:
    enabled: true
    containerPort: 8100
    parameters: []

  tls:
    enabled: false
    containerPort: 8543
    parameters: []

proxy:
  enabled: true
  type: LoadBalancer
  loadBalancerIP: 10.108.1.250
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    enable-metrics: "true"

  http:
    enabled: true
    servicePort: 80
    containerPort: 8000
    parameters: []

  tls:
    enabled: true
    servicePort: 443
    containerPort: 8443
    parameters:
    - http2

  # Kong proxy ingress settings.
  # Note: You need this only if you are using another Ingress Controller
  # to expose Kong outside the k8s cluster.
  ingress:
    # Enable/disable exposure using ingress.
    enabled: false
    ingressClassName:
    hostname:
    annotations: {}
    path: /


# -----------------------------------------------------------------------------
# Ingress Controller parameters
# -----------------------------------------------------------------------------
ingressController:
  enabled: true
  image:
    repository: kong/kubernetes-ingress-controller
    tag: "2.12"
    effectiveSemver:
  args: []

enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: true
  portal:
    enabled: true
  rbac:
    enabled: false
    admin_gui_auth: basic-auth
    session_conf_secret: kong-session-config
    admin_gui_auth_conf_secret: CHANGEME-admin-gui-auth-conf-secret

# Specify Kong admin API service and listener configuration
admin:
  enabled: true
  type: ClusterIP
  annotations:
    konghq.com/protocol: https  
  labels: {}

  http:
    enabled: false
    servicePort: 8001
    containerPort: 8001
    parameters: []

  tls:
    enabled: true
    servicePort: 8444
    containerPort: 8444
    parameters:
    - http2

  ingress:
    enabled: true
    ingressClassName: kong-datamigration
    hostname: kongadmin.dev2.pickles.com.au
    path: /

manager:
  enabled: true
  annotations:
    konghq.com/protocol: https   
  type: ClusterIP
  labels: {}

  http:
    enabled: false
    servicePort: 8002
    containerPort: 8002
    parameters: []

  tls:
    enabled: true
    servicePort: 8445
    containerPort: 8445
    parameters:
    - http2

  ingress:
    enabled: true
    ingressClassName: kong-datamigration
    hostname: kongmanager.dev2.pickles.com.au
    path: /

portal:
  enabled: true
  annotations:
    konghq.com/protocol: https  
  type: ClusterIP
  labels: {}

  http:
    enabled: false
    servicePort: 8003
    containerPort: 8003
    parameters: []

  tls:
    enabled: true
    servicePort: 8446
    containerPort: 8446
    parameters:
    - http2

  ingress:
    enabled: true        
    ingressClassName: kong-datamigration
    hostname: kongportal.dev2.pickles.com.au
    path: /

portalapi:
  enabled: true
  annotations:
    konghq.com/protocol: https  
  type: ClusterIP
  labels: {}

  http:
    enabled: false
    servicePort: 8004
    containerPort: 8004
    parameters: []

  tls:
    enabled: true
    servicePort: 8447
    containerPort: 8447
    parameters:
    - http2

  ingress:
    enabled: true
    ingressClassName: kong-datamigration
    hostname: kongportal.dev2.pickles.com.au
    path: /api

clustertelemetry:
  enabled: false
  annotations: {}
  labels: {}

  tls:
    enabled: false
    servicePort: 8006
    containerPort: 8006
    parameters: []

  type: ClusterIP

extraConfigMaps: []

extraSecrets: []
