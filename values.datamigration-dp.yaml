env:
  role: data_plane
  cluster_cert:
    valueFrom:
      secretKeyRef:
        name: kong-cluster-cert
        key: tls.crt      
  cluster_cert_key:
    valueFrom:
      secretKeyRef:
        name: kong-cluster-cert
        key: tls.key  
  database: "off"
  log_level: debug
  proxy_access_log: /dev/stdout
  admin_access_log: /dev/stdout
  admin_gui_access_log: /dev/stdout
  portal_api_access_log: /dev/stdout
  proxy_error_log: /dev/stderr
  admin_error_log: /dev/stderr
  admin_gui_error_log: /dev/stderr
  portal_api_error_log: /dev/stderr
  status_listen: 0.0.0.0:8100
  cluster_control_plane: kong-datamigration-cp-kong-cluster.kong-datamigration.svc.cluster.local:8005
  cluster_telemetry_endpoint: kong-datamigration-cp-kong-clustertelemetry.kong-datamigration.svc.cluster.local:8006    
  prefix: /kong_prefix/

image:
  # repository: dtapickles.azurecr.io/devops/kong/kong-proxy-go-plugins
  # tag: "3.4.1.1.279639"
  repository: kong/kong-gateway
  tag: "3.4.3.11"  
  pullPolicy: IfNotPresent
  pullSecrets:
    - dtapickles

# Specify Kong proxy service configuration
proxy:
  enabled: true
  type: LoadBalancer
  loadBalancerIP: 10.108.27.237
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    enable-metrics: "true"

  http:
    enabled: true
    servicePort: 80
    containerPort: 8000
    parameters: []

  tls:
    enabled: true
    servicePort: 443
    containerPort: 8443
    parameters:
    - http2

  ingress:
    enabled: false
    ingressClassName:
    hostname:
    annotations: {}
    path: /


# -----------------------------------------------------------------------------
# Ingress Controller parameters
# -----------------------------------------------------------------------------
ingressController:
  enabled: true
  image:
    repository: kong/kubernetes-ingress-controller
    tag: "2.12"
    effectiveSemver:
  args: []

  watchNamespaces: []

  env:
    # kong_admin_url: https://kong-datamigration-cp-kong-admin:8444 
    kong_admin_url: http://kong-datamigration-cp-kong-admin.kong-datamigration.svc:8001 
    kong_admin_tls_skip_verify: true
    kong_admin_token:
      valueFrom:
        secretKeyRef:
          name: kong-admin-token-secret
          key: token

  admissionWebhook:
    enabled: false
    failurePolicy: Fail
    port: 8080
    certificate:
      provided: false

  ingressClass: kong-datamigration
  ingressClassAnnotations: {}

  rbac:
    create: true

  # general properties
  livenessProbe:
    httpGet:
      path: "/healthz"
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 30
    timeoutSeconds: 20
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: "/readyz"
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 30
    timeoutSeconds: 20
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 3
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 600Mi    


resources:
  limits:
   cpu: 1
   memory: 1.5Gi
  requests:
   cpu: 200m
   memory: 600Mi      

# Enable autoscaling using HorizontalPodAutoscaler
# When configuring an HPA, you must set resource requests on all containers via
# "resources" and, if using the controller, "ingressController.resources" in values.yaml
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  ## targetCPUUtilizationPercentage only used if the cluster doesn't support autoscaling/v2beta
  targetCPUUtilizationPercentage:
  ## Otherwise for clusters that do support autoscaling/v2beta, use metrics
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 120


serviceMonitor:
  enabled: true
  namespace: kong-datamigration
  labels:
    release: kube-prometheus-stack

enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: true
  portal:
    enabled: true
  rbac:
    enabled: false
    admin_gui_auth: openid-connect
    session_conf_secret: kong-admin-session-config
    admin_gui_auth_conf_secret: kong-oidc-configuration

admin:
  enabled: false

manager:
  enabled: false

portal:
  enabled: false

portalapi:
  enabled: false
# Liveness probe failed: Get "http://10.42.0.70:10254/healthz": dial tcp 10.42.0.70:10254: connect: connection refused 

kongAuthJwt:
  algorithm: RS256
  key: https://apmf-dm.dev2.pickles.com.au
  kongCredType: jwt
  rsaPublicKey: |-
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwW60gb/cRNZ3FVvcsSW0
    wG8ACSkT0lFQRjTLZDPvaMle2/pYtp5QCAsANiLoairttAYStcEGz9IzF8wCekR3
    b5KtDToCUu9lMJytzffeXMPRLbkvnQJpEAiyNNT13ayUjOUgBAdftUGOYnto4qKc
    glvuVXI5PFvAiDBT3xrQMsHeZ1gSJdUhGLr1ji9fJmMQH+XF+1W/d56t6dngrQuy
    TpH4ylB6wS9ueqQYOQgGycmrGP8AXKF8AtRnXPYH2Wy/NIaHUkNkL2U2G2uc77al
    0NDbEpxvqdSBYXytt/mRKFXiPFvZauwoQmtAvvXaCldsPsahkc7q3q6tsGjGJAhB
    rQIDAQAB
    -----END PUBLIC KEY-----

kongConsumer:
  namespace: kong-datamigration

kongSasToken:
  keyVault: ps-ae-dta-demo-keyvault
  apiVersion: spv.no/v2beta1
