env:
  role: control_plane
  log_level: debug

  cluster_cert:
    valueFrom:
      secretKeyRef:
        name: kong-cluster-cert
        key: tls.crt
  cluster_cert_key:
    valueFrom:
      secretKeyRef:
        name: kong-cluster-cert
        key: tls.key
  cluster_mtls: shared

  database: "postgres"  
  admin_gui_protocol: https
  admin_gui_host: kongmanager.dev2.pickles.com.au
  admin_gui_url: https://kongmanager.dev2.pickles.com.au  
  admin_gui_api_url: https://kongmanager.dev2.pickles.com.au/api
  portal_gui_host: kongportal.dev2.pickles.com.au
  portal_gui_url: https://kongportal.dev2.pickles.com.au
  portal_api_url: https://kongportal.dev2.pickles.com.au/api      
  # Tell the control plane how to connect to the data plane (need to fix the below)
  cluster_listen: 0.0.0.0:8005
  cluster_telemetry_listen: 0.0.0.0:8006

  portal_gui_protocol: https
  admin_access_log: /dev/stdout
  admin_gui_access_log: /dev/stdout
  admin_error_log: /dev/stderr
  admin_gui_error_log: /dev/stderr
  prefix: /kong_prefix/
  # kong_admin is the user name here
  password:
    valueFrom:
      secretKeyRef:
          name: kong-enterprise-superuser-password
          key: password  

  portal_auth: basic-auth 
  portal_session_conf:
    valueFrom:
      secretKeyRef:
        name: kong-portal-session-config
        key: portal_session_conf         
  portal_auto_approve: true  
    
postgresql:
  enabled: true
  auth:
    username: "kong"  
    database: kong
    existingSecret: kong-datamigration-cp-postgresql
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password    
  image:
    tag: 13.11.0-debian-11-r20      
  service:
    ports:
      postgresql: "5432"

extraLabels: {}

image:
  # repository: dtapickles.azurecr.io/devops/kong/kong-proxy-go-plugins
  # tag: "3.4.1.1.279639"
  repository: kong/kong-gateway
  tag: "3.4.3.11"
  pullPolicy: IfNotPresent
  pullSecrets:
    - dtapickles

status:
  enabled: true
  http:
    enabled: true
    containerPort: 8100
    parameters: []

  tls:
    enabled: false
    containerPort: 8543
    parameters: []

proxy:
  enabled: false

# -----------------------------------------------------------------------------
# Ingress Controller parameters
# -----------------------------------------------------------------------------
ingressController:
  enabled: false

enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: true
  portal:
    enabled: true
  rbac:
    enabled: false
    admin_gui_auth: basic-auth
    session_conf_secret: kong-admin-session-config

admin:
  enabled: true
  type: ClusterIP
  # annotations:
  #   konghq.com/protocol: https  
  labels: {}

  http:
    enabled: true
    servicePort: 8001
    containerPort: 8001
    parameters: []

  tls:
    enabled: false
    servicePort: 8444
    containerPort: 8444
    protocol: TCP
    parameters:
    - http2

  ingress:
    enabled: true  
    annotations:
      konghq.com/strip-path: "true"
    ingressClassName: kong-datamigration
    hostname: kongmanager.dev2.pickles.com.au
    path: /api

manager:
  enabled: true
  # annotations:
  #   konghq.com/protocol: https   
  type: ClusterIP
  labels: {}
  http:
    enabled: true
    servicePort: 8002
    containerPort: 8002
    parameters: [] 
  tls:
    enabled: false
    servicePort: 8445
    containerPort: 8445
    parameters:
    - http2

  ingress:
    enabled: true
    ingressClassName: kong-datamigration
    hostname: kongmanager.dev2.pickles.com.au
    path: /

portal:
  # Enable creating a Kubernetes service for the Developer Portal
  enabled: true
  # annotations:
  #   konghq.com/protocol: https  
  type: ClusterIP
  labels: {}

  http:
    enabled: false
    servicePort: 8003
    containerPort: 8003
    parameters: []

  tls:
    enabled: true
    servicePort: 8446
    containerPort: 8446
    parameters:
    - http2

  ingress:
    enabled: true        
    ingressClassName: kong-datamigration
    hostname: kongportal.dev2.pickles.com.au
    path: /

portalapi:
  # Enable creating a Kubernetes service for the Developer Portal API
  enabled: true
  # annotations:
  #   konghq.com/protocol: https  
  type: ClusterIP
  labels: {}

  http:
    enabled: false
    servicePort: 8004
    containerPort: 8004
    parameters: []

  tls:
    enabled: true
    servicePort: 8447
    containerPort: 8447
    parameters:
    - http2

  ingress:
    enabled: true
    ingressClassName: kong-datamigration
    hostname: kongportal.dev2.pickles.com.au
    annotations:
      kubernetes.io/ingress.class: "kong-datamigration"
      konghq.com/strip-path: "true"    
    path: /api

cluster: 
  enabled: true   
  type: ClusterIP
  # annotations:
  #   konghq.com/protocol: https  
  tls:
    enabled: true 
    servicePort: 8005
    containerPort: 8005

clustertelemetry:
  enabled: true
  type: ClusterIP
  # annotations:
  #   konghq.com/protocol: https  
  tls:
    enabled: true 
    servicePort: 8006
    containerPort: 8006

# -----------------------------------------------------------------------------
# Configure cert-manager integration
# -----------------------------------------------------------------------------
# certificates:
#   enabled: true
#   # Set either `issuer` or `clusterIssuer` to the name of the desired cert manager issuer
#   # If left blank a built in self-signed issuer will be created and utilized
#   issuer: "letsencrypt-issuer"
#   clusterIssuer: "" 
#   # "letsencrypt-cluster-issuer"

#   # Set proxy.enabled to true to issue default kong-proxy certificate with cert-manager
#   proxy:
#     enabled: false

#   # Set admin.enabled true to issue kong admin api and manager certificate with cert-manager
#   admin:
#     enabled: true
#     # Set `issuer` or `clusterIssuer` to name of alternate cert-manager clusterIssuer to override default
#     # self-signed issuer.
#     issuer: "letsencrypt-issuer"
#     clusterIssuer: ""
#     # "letsencrypt-cluster-issuer"
#     # Use commonName and dnsNames to set the common name and dns alt names which this
#     # certificate is valid for. Wildcard records are supported by the included self-signed issuer.
#     commonName: "kong-datamigration-cp-kong-admin.kong-datamigration.svc"
#     # Remove the "[]" and uncomment/change the examples to add SANs
#     dnsNames: 
#     - "kong-datamigration-cp-kong-admin.kong-datamigration.svc"


