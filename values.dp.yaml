env:
  # data_plane nodes do not have a database
  role: data_plane
  database: "off"

  # Tell the data plane how to connect to the control plane
  cluster_control_plane: kong-cp-kong-cluster.kong-local.svc.cluster.local:8005
  cluster_telemetry_endpoint: kong-cp-kong-clustertelemetry.kong-local.svc.cluster.local:8006

  # Configure control plane / data plane authentication
  lua_ssl_trusted_certificate: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key

secretVolumes:
- kong-cluster-cert

image:  
  # This kong image is the opensource version. When Kong manger is loading it will show kong manager OSS
  # repository: kong
  # The kong/kong-gateway image is the official Kong image. Can be used for kong enterprise in free mode
  repository: kong/kong-gateway
  tag: "3.4"
  pullPolicy: IfNotPresent


# The data plane handles proxy traffic only
proxy:
  enabled: true
  type: LoadBalancer
  # annotations:
  #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    enable-metrics: "true"

  http:
    enabled: true
    servicePort: 80
    containerPort: 8000
    parameters: []

  ingress:
    enabled: false
    ingressClassName:
    hostname:
    annotations: {}
    # Ingress path.
    path: /



ingressController:
  enabled: true
  image:
    repository: kong/kubernetes-ingress-controller
    tag: "2.12"
    pullPolicy: IfNotPresent
    effectiveSemver:
  args: []

  watchNamespaces: []

  # Specify Kong Ingress Controller configuration via environment variables
  env:
    # The controller disables TLS verification by default because Kong
    # generates self-signed certificates by default. Set this to false once you
    # have installed CA-signed certificates.
    kong_admin_tls_skip_verify: true
    # If using Kong Enterprise with RBAC enabled, uncomment the section below
    # and specify the secret/key containing your admin token.
  #   kong_admin_token:
  #     valueFrom:
  #       secretKeyRef:
  #         name: kong-admin-token-secret
  #         key: token

  admissionWebhook:
    enabled: false
    failurePolicy: Fail
    port: 8080
    certificate:
      provided: false

  ingressClass: kong-local
  # annotations for IngressClass resource (Kubernetes 1.18+)
  ingressClassAnnotations: {}

  livenessProbe:
    httpGet:
      path: "/healthz"
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 30
    timeoutSeconds: 20
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: "/readyz"
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 30
    timeoutSeconds: 20
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 3
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 600Mi

resources:
  limits:
   cpu: 1
   memory: 1.5Gi
  requests:
   cpu: 200m
   memory: 600Mi

# Enable autoscaling using HorizontalPodAutoscaler
# When configuring an HPA, you must set resource requests on all containers via
# "resources" and, if using the controller, "ingressController.resources" in values.yaml
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  ## targetCPUUtilizationPercentage only used if the cluster doesn't support autoscaling/v2beta
  targetCPUUtilizationPercentage:
  ## Otherwise for clusters that do support autoscaling/v2beta, use metrics
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80


# Enable enterprise functionality
enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: false 
  portal:
    enabled: false
  rbac:
    enabled: false
    admin_gui_auth: basic-auth
    session_conf_secret: kong-session-config
    admin_gui_auth_conf_secret: CHANGEME-admin-gui-auth-conf-secret


admin:
  enabled: true
  # below is compulsory if you want to expose admin api through https
  annotations:
    konghq.com/protocol: "https"  
  type: ClusterIP
  labels: {}

  http:
    enabled: false
    servicePort: 8001
    containerPort: 8001
    parameters: []

  tls:
    enabled: true
    servicePort: 8444
    containerPort: 8444
    parameters:
    - http2

manager:
  enabled: false

portal:
  enabled: false

portalapi:
  enabled: false
# Liveness probe failed: Get "http://10.42.0.70:10254/healthz": dial tcp 10.42.0.70:10254: connect: connection refused 